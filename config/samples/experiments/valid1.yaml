apiVersion: iter8.tools/v2alpha1
kind: Experiment
metadata:
  name: sklearn-iris-experiment-12
spec:
  target: mymodelnamespace/sklearn-iris # namespaced name of the inference service
  strategy:
    type: Canary
    handlers:
      start: start
      finish: promote # other option is git_push
      # rollback:     # not applicable; but could 
      failure: promote # could do something else
    weights:
      maxCandidateWeight: 100 # default; units = percent; candidate weight never exceeds this value
      maxCandidateWeightIncrement: 10 # default; units = percent; candidate weight increment never exceeds this value
      algorithm: Progressive # default
  versionInfo:
    baseline:
      name: default
      tags:
        container: my-container
    candidates:
    - name: canary
      weightObjRef:
        apiVersion: serving.kubeflow.org/v1alpha2
        kind: InferenceService
        name: sklearn-iris
        namespace: kfserving-test
        fieldPath: spec.canaryTrafficPercent
  criteria:
    requestCount: request-count
    indicators:
    - 95th-percentile-tail-latency
    - container-throttled-seconds-total
    objectives:
    - metric: default/mean-latency
      upperLimit: 1000
    - metric: error-rate
      upperLimit: "0.01"
  duration:
    intervalSeconds: 20
    maxIterations: 8
  metrics:
    - name: error-rate
      metricObj:
        apiVersion: core.iter8.tools/v1alpha3
        kind: Metric
        metadata:
          name: error-rate
        spec:
          description: Fraction of requests with error responses
          params:
            query: (sum(increase(revision_app_request_latencies_count{response_code_class!='2xx',service_name=~'.*$name'}[$interval])) or on() vector(0)) / (sum(increase(revision_app_request_latencies_count{service_name=~'.*$name'}[$interval])) or on() vector(0))
          type: gauge
          sample_size: 
            name: request-count
          provider: prometheus
    - name: request-count
      metricObj: 
        apiVersion: core.iter8.tools/v1alpha3
        kind: Metric
        metadata:
          name: request-count
        spec:
          params:
            query: sum(increase(revision_app_request_latencies_count{service_name=~'.*$name'}[$interval])) or on() vector(0)
          description: Number of requests
          type: counter
          provider: prometheus
    - name: container-throttled-seconds-total
      metricObj:
          apiVersion: core.iter8.tools/v1alpha3
          kind: Metric
          metadata:
            name: container-throttled-seconds-total
          spec:
            params:
              query: container_cpu_cfs_throttled_seconds_total{container='kfserving-container', id=~'/kubepods.*', pod=~'.*$name.*'} or on() vector(0)
            description: Total time duration the container has been throttled
            units: seconds
            type: counter
            provider: prometheus
    - name: default/mean-latency
      metricObj:
        apiVersion: core.iter8.tools/v1alpha3
        kind: Metric
        metadata:
          name: mean-latency
        spec:
          description: Mean latency
          units: milliseconds
          params:
            query: (sum(increase(revision_app_request_latencies_sum{service_name=~'.*$name'}[$interval]))or on() vector(0)) / (sum(increase(revision_app_request_latencies_count{service_name=~'.*$name'}[$interval])) or on() vector(0))
          type: gauge
          sample_size: 
            name: request-count
          provider: prometheus
    - name: 95th-percentile-tail-latency
      metricObj:
        apiVersion: core.iter8.tools/v1alpha3
        kind: Metric
        metadata:
          name: 95th-percentile-tail-latency
        spec:
          description: 95th percentile tail latency
          units: milliseconds
          params:
            query: query=histogram_quantile(0.95, sum(rate(revision_app_request_latencies_bucket{service_name=~'.*$name'}[$interval]))
              by (le))
          type: gauge
          sample_size: 
            name: request-count
          provider: prometheus
status: # subresource
  completedIterations: 0
  phase: progressing
  initTime: "2020-08-13T17:00:00Z"
  startTime: "2020-08-13T17:26:37Z"
  lastUpdateTime: "2020-08-13T18:05:49Z"
  # endTimeTime: "2020-08-13T18:05:49Z"; this will be available after experiment is ended
  conditions:
  - type: StartHandlerCompleted
    status: "True"
    lastTransitionTime: "2020-08-13T17:26:37Z"
    reason: ""
    message: ""
  - type: FinishHandlerCompleted
    status: Unknown
    lastTransitionTime: "2020-08-13T17:26:37Z"
    reason: ""
    message: ""
  currentWeightDistribution:
  - name: baseline
    value: 25
  - name: canary
    value: 75
  analysis:
    aggregatedMetrics:
      provenance: https://iter8-analytics:9090
      timestamp: "2020-08-13T17:26:37Z"
      data:
        iter8/mean-latency:
          max: "10.0"
          min: "2.0"
          data:
            baseline:
              max: "8.0"
              min: "5.0"
              value: "6.89"
              sampleSize: 40
            canary:
              max: "8.0"
              min: "5.0"
              value: "6.89"
              sampleSize: 40
        request-count:
          max: "100"
          min: "0"
          data:
            baseline: 
              max: "20"
              min: "0"
              value: "20"
            canary:
              max: "100"
              min: "0"
              value: "100"
      message: "no requests for version x."
    versionAssessments:
      provenance: https://iter8-analytics:9090
      timestamp: "2020-08-13T17:26:37Z"
      data:
        baseline: [true, true] # each entry in this array corresponds to entry in the objective
        canary: [true, false]
      message: "some message here for kubectl printer"
    winnerAssessment:
      provenance: https://iter8-analytics:9090
      timestamp: "2020-08-13T17:26:37Z"
      data:
        winnerFound: true
        winner: canary
      message: "what happened?"
    weights:
      provenance: https://iter8-analytics:9090
      timestamp: "2020-08-13T17:26:37Z"
      data: # num entries = num versions in this list
      - name: baseline
        value: 25
      - name: canary
        value: 75
      message: "some message here for kubectl printer"
